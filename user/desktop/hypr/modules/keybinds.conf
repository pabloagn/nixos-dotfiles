# --------------------------------------------------------
# Route:............/user/desktop/hypr/modules/keybinds.conf
# Type:.............Module Extension
# Created by:.......Pablo Aguirre
# ---------------------------------------------------------

# ------------------------------------------
# Variables
# ------------------------------------------

# Directories
# ------------------------------------------

# Base Programs
# ------------------------------------------
$terminal = kitty
$browser = firefox
$fileManager = thunar
$editor-code = codium

# Rofi Menus
# ------------------------------------------
# Note:
# 	We use drun since we want to remove all the bullsit from the menu.
#		This way we stay only with apps that have a desktop application.
$rofi_apps = rofi -show drun -theme "/home/pabloagn/.dotfiles/user/desktop/rofi/themes/style-4.rasi"
$rofi_aliases = $DOTSCRIPTS/rofi/aliases.sh
$rofi_fuzzy = $DOTSCRIPTS/rofi/fuzzy-search.sh

# Wallpaper Setting
# ------------------------------------------
# Laptop
$wl1 = hyprctl hyprpaper wallpaper "eDP-1,~/.dotfiles/user/assets/wallpapers/wallpaper-01.jpg"
$wl2 = hyprctl hyprpaper wallpaper "eDP-1,~/.dotfiles/user/assets/wallpapers/wallpaper-02.jpg"
$wl3 = hyprctl hyprpaper wallpaper "eDP-1,~/.dotfiles/user/assets/wallpapers/wallpaper-03.jpg"
$wl4 = hyprctl hyprpaper wallpaper "eDP-1,~/.dotfiles/user/assets/wallpapers/wallpaper-04.jpg"
$wl5 = hyprctl hyprpaper wallpaper "eDP-1,~/.dotfiles/user/assets/wallpapers/wallpaper-05.jpg"
$wl6 = hyprctl hyprpaper wallpaper "eDP-1,~/.dotfiles/user/assets/wallpapers/wallpaper-06.jpg"

# HDMI Output
$wh1 = hyprctl hyprpaper wallpaper "HDMI-A-2,~/.dotfiles/user/assets/wallpapers/wallpaper-01.jpg"
$wh2 = hyprctl hyprpaper wallpaper "HDMI-A-2,~/.dotfiles/user/assets/wallpapers/wallpaper-02.jpg"
$wh3 = hyprctl hyprpaper wallpaper "HDMI-A-2,~/.dotfiles/user/assets/wallpapers/wallpaper-03.jpg"
$wh4 = hyprctl hyprpaper wallpaper "HDMI-A-2,~/.dotfiles/user/assets/wallpapers/wallpaper-04.jpg"
$wh5 = hyprctl hyprpaper wallpaper "HDMI-A-2,~/.dotfiles/user/assets/wallpapers/wallpaper-05.jpg"
$wh6 = hyprctl hyprpaper wallpaper "HDMI-A-2,~/.dotfiles/user/assets/wallpapers/wallpaper-06.jpg"

# Special Workspaces
$sw1 = pgrep qalculate-gtk && hyprctl dispatch togglespecialworkspace calculator || qalculate-gtk

# ------------------------------------------
# Keybindings
# ------------------------------------------

# Set "Windows" key as main modifier
# ------------------------------------------
$mainMod = SUPER 

# Base Keybindings
# ------------------------------------------
bind = $mainMod, W, exec, $terminal
bind = $mainMod, C, killactive,
#bind = $mainMod, M, exit, (this will be included in the session manager Rofi menu)
bind = $mainMod, B, exec, $browser
bind = $mainMod, D, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, E, exec, $editor-code
bind = $mainMod, P, pseudo,
bind = $mainMod, J, togglesplit,

# Special Workspaces
# ------------------------------------------
# Note: For most non-desktop apps, we use a lightweight browser (qutebrowser) to quickly open and close windows.

# Execute calculator in special workspace
bind = $mainMod, Q, exec, $sw1

# Open stocks in special workspace
# TODO

# Open calendar in special workspace
# TODO

# Open Linear issues embed in special workspace
# TODO

# Open global clocks window in special workspace (MX, UK, US, BCN)
# TODO

# Open control panel in special workspace (network util, btop, etc) (only the lightweights, since this will be cluttered)
# TODO

# Open RSS panel in special workspace
# TODO

# Window Navigation & Manipulation
# ------------------------------------------

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Workspace Navigation
# ------------------------------------------

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + shift
# We'll not implement mouse scroll since is does not play smoothly.
bind = $mainMod SHIFT, right, workspace, e+1
bind = $mainMod SHIFT, left, workspace, e-1

# Go to previous workspace
# TODO: ALT + TAB

# Audio controls
# ------------------------------------------
# We use:
	# bindl since we want this to work even when input inhibitors are active (e.g., closed lid)
	# binde since we want the command to repeat when key is pressed
bindel = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%-
bindel = , XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 2%+
bindl = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPrev, exec, playerctl previous

# Brightness controls
# ------------------------------------------
# We use:
	# bindl since we want this to work even when input inhibitors are active (e.g., closed lid)
	# binde since we want the command to repeat when key is pressed
bindel = , XF86MonBrightnessDown,exec,brightnessctl set 5%-
bindel = , XF86MonBrightnessUp,exec,brightnessctl set +5% 

# Rofi Menus
# ------------------------------------------

# Rofi apps
bind = $mainMod, A, exec, $rofi_apps

# Rofi aliases
bind = $mainMod, Z, exec, $rofi_aliases

# Rofi fuzzy
bind = $mainMod, F, exec, $rofi_fuzzy

# Global binding to force close Rofi (can be helpful if we get stuck at any point in time)
bind = $mainMod, escape, exec, killall rofi

# Wallpaper setting
# ------------------------------------------

# Switch to wallpaper $w{n} on l & h as defined in variables
bind = $mainMod ALT, 1, exec, $wl1
# bind = $mainMod ALT, 1, exec, $wh1

bind = $mainMod ALT, 2, exec, $wl2
# bind = $mainMod ALT, 2, exec, $wh2

bind = $mainMod ALT, 3, exec, $wl3
# bind = $mainMod ALT, 3, exec, $wh3

bind = $mainMod ALT, 4, exec, $wl4
# bind = $mainMod ALT, 4, exec, $wh4

bind = $mainMod ALT, 5, exec, $wl5
# bind = $mainMod ALT, 5, exec, $wh5

bind = $mainMod ALT, 6, exec, $wl6
# bind = $mainMod ALT, 6, exec, $wh6

# Screenshots
# ------------------------------------------
# TODO
bind = , print, exec, /home/pabloagnck/.dotfiles/user/scripts/screenshots/capture-screen.sh
bind = $mainMod, S, exec, /home/pabloagnck/.dotfiles/user/scripts/screenshots/capture-screen.sh

# bind = CTRL, print, exec, $DOTFILES/user/scripts/screenshots/capture-screen.sh
# bind = CTRL SHIFT, print, exec, $DOTFILES/user/scripts/screenshots/capture-area.sh

# Lid Close / Open Events
# ------------------------------------------
# TODO
# Trigger when the switch is turning on
# Disable laptop screen
bindl = , switch:on:[Lid Switch], exec, hyprctl keyword monitor "eDP-1, disable"

# Trigger when the switch is turning off
# Enable main laptop screen
bindl = , switch:off:[Lid Switch], exec, hyprctl keyword monitor "eDP-1, 1280x800, 0x0, 1"
